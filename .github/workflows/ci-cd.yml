name: CI/CD Pipeline

on:
    pull_request:
        branches: [deployment]
        types: [opened, synchronize, reopened]
    push:
        branches: [deployment]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    # ✅ Runs only on PR (no deployment)
    build-pr:
        if: github.event_name == 'pull_request'
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push PR Docker image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}

    # ✅ Runs only after merge (push to deployment)
    build-and-deploy:
        if: github.event_name == 'push' && github.ref == 'refs/heads/deployment'
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push production Docker image
              id: docker_build
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: |
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

            - name: Update Kubernetes manifest with new image
              run: |
                  sed -i "s|image: .*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|" kubernetes/app/deployment.yaml

            - name: Commit and push manifest update
              run: |
                  git config --local user.email "github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git add kubernetes/app/deployment.yaml
                  git commit -m "chore: update image tag to ${{ github.sha }}" || echo "No changes to commit"
                  git pull --rebase origin deployment
                  git push origin deployment

            # - name: Set up kubeconfig
            #   run: |
            #       mkdir -p $HOME/.kube
            #       echo "${{ secrets.KUBECONFIG_DATA }}" > $HOME/.kube/config
            #       chmod 600 $HOME/.kube/config

            # - name: Deploy to Kubernetes
            #   run: |
            #       # Apply Kubernetes manifests
            #       kubectl apply -f kubernetes/ --validate=false
